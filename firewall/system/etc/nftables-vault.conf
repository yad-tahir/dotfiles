#!/usr/bin/nft -f

# ipv4/ipv6 Simple & Safe Firewall
# you can find examples in /usr/share/nftables/

flush ruleset

# Nat table is consulted when a new connection is created
table ip nat {
	chain pre{
		type nat hook prerouting priority 100; policy accept;

		# A hacky way to expose ports on on the lxd bridge to LAN
		# A better solution would be to use macvlan, but macvlan does
		# not work with 802.11!
		# The NAT table can be summarized as
		# 192.168.1.xxx = 10.10.0.xxx
		ip daddr 192.168.1.125 dnat 10.10.0.125
		ip daddr 192.168.1.126 dnat 10.10.0.126
		ip daddr 192.168.1.127 dnat 10.10.0.127
		ip daddr 192.168.1.128 dnat 10.10.0.128
		ip daddr 192.168.1.129 dnat 10.10.0.129
	}
	chain post{
		type nat hook postrouting priority 100; policy accept;

		ip saddr 10.10.0.125 snat 192.168.1.125
		ip saddr 10.10.0.126 snat 192.168.1.126
		ip saddr 10.10.0.127 snat 192.168.1.127
		ip saddr 10.10.0.128 snat 192.168.1.128
		ip saddr 10.10.0.129 snat 192.168.1.129

		oifname wlp71s0 masquerade
		oifname tun0 snat 10.10.10.2
		oifname tun1 snat 10.10.11.2
	}
}

table ip mangle {
	chain output{
		type route hook output priority -150; policy accept;

		# Set mark=1 on the packets coming from users in the group no-vpn. This mark is later used in the routing table to divert
		# the connect to NIC directly without going through VPN
		meta skgid 1001 mark set 0x1
		# The gid no-wan should avoid VPN too
		meta skgid 1004 mark set 0x1

		# Update connect mark in case this is needed
		ct mark set meta mark
	}
}

table inet filter {
	chain pre{
		type filter hook prerouting priority 0; policy accept;

		# Don't forward VMs' traffic via VPN
		iifname virbr0 mark set 0x1 ct mark set mark
		oifname virbr0 mark set 0x1 ct mark set mark

		iifname br0 mark set 0x1 ct mark set mark
		oifname br0 mark set 0x1 ct mark set mark
	}
  chain input {
	type filter hook input priority 0; policy drop;

	# allow established/related connections
	ct state {established, related} accept
	# early drop of invalid connections
	ct state invalid drop

	# allow from loopback
	iif 1 ip saddr 127.0.0.0/8 accept
	iif 1 ip daddr 127.0.0.0/8 accept

	# Traffic coming from VMs
	iifname br0 accept #To allow DNS replies to come in - FIXME!

	# allow icmp
	ip protocol icmp accept
	ip6 nexthdr icmpv6 accept
  }
  chain forward {
	type filter hook forward priority 0; policy drop;

	iif 1 ip saddr 127.0.0.0/8 accept
	iif 1 ip daddr 127.0.0.0/8 accept

	# LAN VMs
	ip saddr 10.10.0.125 jump no-wan
	ip daddr 10.10.0.125 jump no-wan
	ip saddr 10.10.0.126 jump no-wan
	ip daddr 10.10.0.126 jump no-wan

	# no-net group
	meta skgid 1000 drop
	# no-wan group
	meta skgid 1004 jump no-wan

	# Traffic coming from VMs
	iifname virbr0 accept
	oifname virbr0 accept
	iifname br0 accept
	oifname br0 accept
  }
  chain output {
	type filter hook output priority 0; policy accept;

	# no-net group
	meta skgid 1000 drop
	# no-wan group
	meta skgid 1004 jump no-wan
  }
  chain no-wan {
	ip saddr != {10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 169.254.0.0/16} drop
	ip daddr != {10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 169.254.0.0/16} drop
	ip6 saddr != {fd00::/8, fe80::/10} drop
	ip6 daddr != {fd00::/8, fe80::/10} drop
  }
}
